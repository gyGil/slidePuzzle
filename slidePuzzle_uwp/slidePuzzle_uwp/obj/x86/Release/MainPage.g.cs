#pragma checksum "C:\Users\Student\Source\Repos\billclub_cs\slidePuzzle_uwp\slidePuzzle_uwp\MainPage.xaml" "{406ea660-64cf-4c82-b6f0-42d48172a799}" "2F987819BFE7FCDDAE75653570C126DD"
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace slidePuzzle_uwp
{
    partial class MainPage : 
        global::Windows.UI.Xaml.Controls.Page, 
        global::Windows.UI.Xaml.Markup.IComponentConnector,
        global::Windows.UI.Xaml.Markup.IComponentConnector2
    {
        internal class XamlBindingSetters
        {
            public static void Set_Windows_UI_Xaml_Controls_ItemsControl_ItemsSource(global::Windows.UI.Xaml.Controls.ItemsControl obj, global::System.Object value, string targetNullValue)
            {
                if (value == null && targetNullValue != null)
                {
                    value = (global::System.Object) global::Windows.UI.Xaml.Markup.XamlBindingHelper.ConvertValue(typeof(global::System.Object), targetNullValue);
                }
                obj.ItemsSource = value;
            }
            public static void Set_Windows_UI_Xaml_Controls_Image_Source(global::Windows.UI.Xaml.Controls.Image obj, global::Windows.UI.Xaml.Media.ImageSource value, string targetNullValue)
            {
                if (value == null && targetNullValue != null)
                {
                    value = (global::Windows.UI.Xaml.Media.ImageSource) global::Windows.UI.Xaml.Markup.XamlBindingHelper.ConvertValue(typeof(global::Windows.UI.Xaml.Media.ImageSource), targetNullValue);
                }
                obj.Source = value;
            }
            public static void Set_Windows_UI_Xaml_Controls_TextBlock_Text(global::Windows.UI.Xaml.Controls.TextBlock obj, global::System.String value, string targetNullValue)
            {
                if (value == null && targetNullValue != null)
                {
                    value = targetNullValue;
                }
                obj.Text = value ?? global::System.String.Empty;
            }
        };

        private class MainPage_obj15_Bindings :
            global::Windows.UI.Xaml.IDataTemplateExtension,
            global::Windows.UI.Xaml.Markup.IComponentConnector,
            IMainPage_Bindings
        {
            private global::slidePuzzle_uwp.Picture dataRoot;
            private bool initialized = false;
            private const int NOT_PHASED = (1 << 31);
            private const int DATA_CHANGED = (1 << 30);
            private bool removedDataContextHandler = false;

            // Fields for each control that has bindings.
            private global::System.WeakReference obj15;

            public MainPage_obj15_Bindings()
            {
            }

            // IComponentConnector

            public void Connect(int connectionId, global::System.Object target)
            {
                switch(connectionId)
                {
                    case 15:
                        this.obj15 = new global::System.WeakReference((global::Windows.UI.Xaml.Controls.Image)target);
                        break;
                    default:
                        break;
                }
            }

            public void DataContextChangedHandler(global::Windows.UI.Xaml.FrameworkElement sender, global::Windows.UI.Xaml.DataContextChangedEventArgs args)
            {
                 global::slidePuzzle_uwp.Picture data = args.NewValue as global::slidePuzzle_uwp.Picture;
                 if (args.NewValue != null && data == null)
                 {
                    throw new global::System.ArgumentException("Incorrect type passed into template. Based on the x:DataType global::slidePuzzle_uwp.Picture was expected.");
                 }
                 this.SetDataRoot(data);
                 this.Update();
            }

            // IDataTemplateExtension

            public bool ProcessBinding(uint phase)
            {
                throw new global::System.NotImplementedException();
            }

            public int ProcessBindings(global::Windows.UI.Xaml.Controls.ContainerContentChangingEventArgs args)
            {
                int nextPhase = -1;
                switch(args.Phase)
                {
                    case 0:
                        nextPhase = -1;
                        this.SetDataRoot(args.Item as global::slidePuzzle_uwp.Picture);
                        if (!removedDataContextHandler)
                        {
                            removedDataContextHandler = true;
                            ((global::Windows.UI.Xaml.Controls.Image)args.ItemContainer.ContentTemplateRoot).DataContextChanged -= this.DataContextChangedHandler;
                        }
                        this.initialized = true;
                        break;
                }
                this.Update_((global::slidePuzzle_uwp.Picture) args.Item, 1 << (int)args.Phase);
                return nextPhase;
            }

            public void ResetTemplate()
            {
            }

            // IMainPage_Bindings

            public void Initialize()
            {
                if (!this.initialized)
                {
                    this.Update();
                }
            }
            
            public void Update()
            {
                this.Update_(this.dataRoot, NOT_PHASED);
                this.initialized = true;
            }

            public void StopTracking()
            {
            }

            // MainPage_obj15_Bindings

            public void SetDataRoot(global::slidePuzzle_uwp.Picture newDataRoot)
            {
                this.dataRoot = newDataRoot;
            }

            // Update methods for each path node used in binding steps.
            private void Update_(global::slidePuzzle_uwp.Picture obj, int phase)
            {
                if (obj != null)
                {
                    if ((phase & (NOT_PHASED | (1 << 0))) != 0)
                    {
                        this.Update_GameImage(obj.GameImage, phase);
                    }
                }
            }
            private void Update_GameImage(global::Windows.UI.Xaml.Media.Imaging.BitmapImage obj, int phase)
            {
                if((phase & ((1 << 0) | NOT_PHASED )) != 0)
                {
                    XamlBindingSetters.Set_Windows_UI_Xaml_Controls_Image_Source(this.obj15.Target as global::Windows.UI.Xaml.Controls.Image, obj, null);
                }
            }
        }

        private class MainPage_obj29_Bindings :
            global::Windows.UI.Xaml.IDataTemplateExtension,
            global::Windows.UI.Xaml.Markup.IComponentConnector,
            IMainPage_Bindings
        {
            private global::slidePuzzle_uwp.Player dataRoot;
            private bool initialized = false;
            private const int NOT_PHASED = (1 << 31);
            private const int DATA_CHANGED = (1 << 30);
            private bool removedDataContextHandler = false;

            // Fields for each control that has bindings.
            private global::Windows.UI.Xaml.Controls.TextBlock obj30;
            private global::Windows.UI.Xaml.Controls.TextBlock obj31;
            private global::Windows.UI.Xaml.Controls.TextBlock obj32;

            public MainPage_obj29_Bindings()
            {
            }

            // IComponentConnector

            public void Connect(int connectionId, global::System.Object target)
            {
                switch(connectionId)
                {
                    case 30:
                        this.obj30 = (global::Windows.UI.Xaml.Controls.TextBlock)target;
                        break;
                    case 31:
                        this.obj31 = (global::Windows.UI.Xaml.Controls.TextBlock)target;
                        break;
                    case 32:
                        this.obj32 = (global::Windows.UI.Xaml.Controls.TextBlock)target;
                        break;
                    default:
                        break;
                }
            }

            public void DataContextChangedHandler(global::Windows.UI.Xaml.FrameworkElement sender, global::Windows.UI.Xaml.DataContextChangedEventArgs args)
            {
                 global::slidePuzzle_uwp.Player data = args.NewValue as global::slidePuzzle_uwp.Player;
                 if (args.NewValue != null && data == null)
                 {
                    throw new global::System.ArgumentException("Incorrect type passed into template. Based on the x:DataType global::slidePuzzle_uwp.Player was expected.");
                 }
                 this.SetDataRoot(data);
                 this.Update();
            }

            // IDataTemplateExtension

            public bool ProcessBinding(uint phase)
            {
                throw new global::System.NotImplementedException();
            }

            public int ProcessBindings(global::Windows.UI.Xaml.Controls.ContainerContentChangingEventArgs args)
            {
                int nextPhase = -1;
                switch(args.Phase)
                {
                    case 0:
                        nextPhase = -1;
                        this.SetDataRoot(args.Item as global::slidePuzzle_uwp.Player);
                        if (!removedDataContextHandler)
                        {
                            removedDataContextHandler = true;
                            ((global::Windows.UI.Xaml.Controls.Grid)args.ItemContainer.ContentTemplateRoot).DataContextChanged -= this.DataContextChangedHandler;
                        }
                        this.initialized = true;
                        break;
                }
                this.Update_((global::slidePuzzle_uwp.Player) args.Item, 1 << (int)args.Phase);
                return nextPhase;
            }

            public void ResetTemplate()
            {
            }

            // IMainPage_Bindings

            public void Initialize()
            {
                if (!this.initialized)
                {
                    this.Update();
                }
            }
            
            public void Update()
            {
                this.Update_(this.dataRoot, NOT_PHASED);
                this.initialized = true;
            }

            public void StopTracking()
            {
            }

            // MainPage_obj29_Bindings

            public void SetDataRoot(global::slidePuzzle_uwp.Player newDataRoot)
            {
                this.dataRoot = newDataRoot;
            }

            // Update methods for each path node used in binding steps.
            private void Update_(global::slidePuzzle_uwp.Player obj, int phase)
            {
                if (obj != null)
                {
                    if ((phase & (NOT_PHASED | (1 << 0))) != 0)
                    {
                        this.Update_Rank(obj.Rank, phase);
                        this.Update_Name(obj.Name, phase);
                        this.Update_PlayTime(obj.PlayTime, phase);
                    }
                }
            }
            private void Update_Rank(global::System.Int32 obj, int phase)
            {
                if((phase & ((1 << 0) | NOT_PHASED )) != 0)
                {
                    XamlBindingSetters.Set_Windows_UI_Xaml_Controls_TextBlock_Text(this.obj30, obj.ToString(), null);
                }
            }
            private void Update_Name(global::System.String obj, int phase)
            {
                if((phase & ((1 << 0) | NOT_PHASED )) != 0)
                {
                    XamlBindingSetters.Set_Windows_UI_Xaml_Controls_TextBlock_Text(this.obj31, obj, null);
                }
            }
            private void Update_PlayTime(global::System.TimeSpan obj, int phase)
            {
                if((phase & ((1 << 0) | NOT_PHASED )) != 0)
                {
                    XamlBindingSetters.Set_Windows_UI_Xaml_Controls_TextBlock_Text(this.obj32, obj.ToString(), null);
                }
            }
        }

        private class MainPage_obj1_Bindings :
            global::Windows.UI.Xaml.Markup.IComponentConnector,
            IMainPage_Bindings
        {
            private global::slidePuzzle_uwp.MainPage dataRoot;
            private bool initialized = false;
            private const int NOT_PHASED = (1 << 31);
            private const int DATA_CHANGED = (1 << 30);

            // Fields for each control that has bindings.
            private global::Windows.UI.Xaml.Controls.GridView obj12;
            private global::Windows.UI.Xaml.Controls.GridView obj25;

            public MainPage_obj1_Bindings()
            {
            }

            // IComponentConnector

            public void Connect(int connectionId, global::System.Object target)
            {
                switch(connectionId)
                {
                    case 12:
                        this.obj12 = (global::Windows.UI.Xaml.Controls.GridView)target;
                        break;
                    case 25:
                        this.obj25 = (global::Windows.UI.Xaml.Controls.GridView)target;
                        break;
                    default:
                        break;
                }
            }

            // IMainPage_Bindings

            public void Initialize()
            {
                if (!this.initialized)
                {
                    this.Update();
                }
            }
            
            public void Update()
            {
                this.Update_(this.dataRoot, NOT_PHASED);
                this.initialized = true;
            }

            public void StopTracking()
            {
            }

            // MainPage_obj1_Bindings

            public void SetDataRoot(global::slidePuzzle_uwp.MainPage newDataRoot)
            {
                this.dataRoot = newDataRoot;
            }

            public void Loading(global::Windows.UI.Xaml.FrameworkElement src, object data)
            {
                this.Initialize();
            }

            // Update methods for each path node used in binding steps.
            private void Update_(global::slidePuzzle_uwp.MainPage obj, int phase)
            {
                if (obj != null)
                {
                    if ((phase & (NOT_PHASED | (1 << 0))) != 0)
                    {
                        this.Update_Images(obj.Images, phase);
                        this.Update_ocLeaderBoard(obj.ocLeaderBoard, phase);
                    }
                }
            }
            private void Update_Images(global::System.Collections.ObjectModel.ObservableCollection<global::slidePuzzle_uwp.Picture> obj, int phase)
            {
                if((phase & ((1 << 0) | NOT_PHASED )) != 0)
                {
                    XamlBindingSetters.Set_Windows_UI_Xaml_Controls_ItemsControl_ItemsSource(this.obj12, obj, null);
                }
            }
            private void Update_ocLeaderBoard(global::System.Collections.ObjectModel.ObservableCollection<global::slidePuzzle_uwp.Player> obj, int phase)
            {
                if((phase & ((1 << 0) | NOT_PHASED )) != 0)
                {
                    XamlBindingSetters.Set_Windows_UI_Xaml_Controls_ItemsControl_ItemsSource(this.obj25, obj, null);
                }
            }
        }
        /// <summary>
        /// Connect()
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Windows.UI.Xaml.Build.Tasks"," 14.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public void Connect(int connectionId, object target)
        {
            switch(connectionId)
            {
            case 1:
                {
                    global::Windows.UI.Xaml.Controls.Page element1 = (global::Windows.UI.Xaml.Controls.Page)(target);
                    #line 9 "..\..\..\MainPage.xaml"
                    ((global::Windows.UI.Xaml.Controls.Page)element1).Loaded += this.Page_Loaded_1;
                    #line default
                }
                break;
            case 2:
                {
                    this.VisualStateGroup = (global::Windows.UI.Xaml.VisualStateGroup)(target);
                }
                break;
            case 3:
                {
                    this.Phone5inch = (global::Windows.UI.Xaml.VisualState)(target);
                }
                break;
            case 4:
                {
                    this.Surface = (global::Windows.UI.Xaml.VisualState)(target);
                }
                break;
            case 5:
                {
                    this.Desktop = (global::Windows.UI.Xaml.VisualState)(target);
                }
                break;
            case 6:
                {
                    this.rootPivot = (global::Windows.UI.Xaml.Controls.Pivot)(target);
                }
                break;
            case 7:
                {
                    this.tsAceel = (global::Windows.UI.Xaml.Controls.ToggleSwitch)(target);
                    #line 324 "..\..\..\MainPage.xaml"
                    ((global::Windows.UI.Xaml.Controls.ToggleSwitch)this.tsAceel).Toggled += this.ToggleSwitch_Toggled;
                    #line default
                }
                break;
            case 8:
                {
                    this.cbNumberBoard = (global::Windows.UI.Xaml.Controls.CheckBox)(target);
                    #line 325 "..\..\..\MainPage.xaml"
                    ((global::Windows.UI.Xaml.Controls.CheckBox)this.cbNumberBoard).Checked += this.Number_Checked;
                    #line 325 "..\..\..\MainPage.xaml"
                    ((global::Windows.UI.Xaml.Controls.CheckBox)this.cbNumberBoard).Unchecked += this.Number_Unchecked;
                    #line default
                }
                break;
            case 9:
                {
                    this.cbImageBoard = (global::Windows.UI.Xaml.Controls.CheckBox)(target);
                    #line 326 "..\..\..\MainPage.xaml"
                    ((global::Windows.UI.Xaml.Controls.CheckBox)this.cbImageBoard).Checked += this.Image_Checked;
                    #line 326 "..\..\..\MainPage.xaml"
                    ((global::Windows.UI.Xaml.Controls.CheckBox)this.cbImageBoard).Unchecked += this.Image_Unchecked;
                    #line default
                }
                break;
            case 10:
                {
                    this.ImageMainGrid = (global::Windows.UI.Xaml.Controls.Grid)(target);
                    #line 259 "..\..\..\MainPage.xaml"
                    ((global::Windows.UI.Xaml.Controls.Grid)this.ImageMainGrid).Loaded += this.ImageMainGrid_Loaded;
                    #line default
                }
                break;
            case 11:
                {
                    this.imageControl = (global::Windows.UI.Xaml.Controls.Canvas)(target);
                }
                break;
            case 12:
                {
                    this.ImageGridView = (global::Windows.UI.Xaml.Controls.GridView)(target);
                    #line 286 "..\..\..\MainPage.xaml"
                    ((global::Windows.UI.Xaml.Controls.GridView)this.ImageGridView).ItemClick += this.ImageGridView_ItemClick;
                    #line default
                }
                break;
            case 13:
                {
                    this.OpenCamera = (global::Windows.UI.Xaml.Controls.Button)(target);
                    #line 316 "..\..\..\MainPage.xaml"
                    ((global::Windows.UI.Xaml.Controls.Button)this.OpenCamera).Click += this.TakePicture_Click;
                    #line default
                }
                break;
            case 14:
                {
                    this.StartupProgressRing = (global::Windows.UI.Xaml.Controls.ProgressRing)(target);
                }
                break;
            case 16:
                {
                    this.PictureSelect = (global::Windows.UI.Xaml.Controls.TextBlock)(target);
                }
                break;
            case 17:
                {
                    this.First = (global::Windows.UI.Xaml.Controls.Border)(target);
                }
                break;
            case 18:
                {
                    this.Second = (global::Windows.UI.Xaml.Controls.SplitView)(target);
                }
                break;
            case 19:
                {
                    this.Third = (global::Windows.UI.Xaml.Controls.Grid)(target);
                }
                break;
            case 20:
                {
                    this.Third0 = (global::Windows.UI.Xaml.Controls.StackPanel)(target);
                }
                break;
            case 21:
                {
                    this.Third1 = (global::Windows.UI.Xaml.Controls.StackPanel)(target);
                }
                break;
            case 22:
                {
                    this.btnBoard = (global::Windows.UI.Xaml.Controls.Button)(target);
                    #line 247 "..\..\..\MainPage.xaml"
                    ((global::Windows.UI.Xaml.Controls.Button)this.btnBoard).Click += this.btnBoard_Click;
                    #line default
                }
                break;
            case 23:
                {
                    this.btnPlay = (global::Windows.UI.Xaml.Controls.Button)(target);
                    #line 240 "..\..\..\MainPage.xaml"
                    ((global::Windows.UI.Xaml.Controls.Button)this.btnPlay).Click += this.btnPlay_Click;
                    #line default
                }
                break;
            case 24:
                {
                    this.gridGame = (global::Windows.UI.Xaml.Controls.Grid)(target);
                    #line 177 "..\..\..\MainPage.xaml"
                    ((global::Windows.UI.Xaml.Controls.Grid)this.gridGame).PointerReleased += this.gridGame_PointerReleased;
                    #line default
                }
                break;
            case 26:
                {
                    this.gridGetName = (global::Windows.UI.Xaml.Controls.Grid)(target);
                }
                break;
            case 27:
                {
                    this.tbGetName = (global::Windows.UI.Xaml.Controls.TextBox)(target);
                }
                break;
            case 28:
                {
                    this.btnGetName = (global::Windows.UI.Xaml.Controls.Button)(target);
                    #line 223 "..\..\..\MainPage.xaml"
                    ((global::Windows.UI.Xaml.Controls.Button)this.btnGetName).Click += this.btnGetName_Click;
                    #line default
                }
                break;
            case 33:
                {
                    this.First0 = (global::Windows.UI.Xaml.Controls.Button)(target);
                }
                break;
            case 34:
                {
                    this.First1 = (global::Windows.UI.Xaml.Controls.Button)(target);
                    #line 157 "..\..\..\MainPage.xaml"
                    ((global::Windows.UI.Xaml.Controls.Button)this.First1).Click += this.First1_Click;
                    #line default
                }
                break;
            case 35:
                {
                    this.First2 = (global::Windows.UI.Xaml.Controls.StackPanel)(target);
                }
                break;
            case 36:
                {
                    this.First3 = (global::Windows.UI.Xaml.Controls.StackPanel)(target);
                }
                break;
            case 37:
                {
                    this.elapsedTime = (global::Windows.UI.Xaml.Controls.TextBlock)(target);
                }
                break;
            default:
                break;
            }
            this._contentLoaded = true;
        }

        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Windows.UI.Xaml.Build.Tasks"," 14.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public global::Windows.UI.Xaml.Markup.IComponentConnector GetBindingConnector(int connectionId, object target)
        {
            global::Windows.UI.Xaml.Markup.IComponentConnector returnValue = null;
            switch(connectionId)
            {
            case 1:
                {
                    global::Windows.UI.Xaml.Controls.Page element1 = (global::Windows.UI.Xaml.Controls.Page)target;
                    MainPage_obj1_Bindings bindings = new MainPage_obj1_Bindings();
                    returnValue = bindings;
                    bindings.SetDataRoot(this);
                    this.Bindings = bindings;
                    element1.Loading += bindings.Loading;
                }
                break;
            case 15:
                {
                    global::Windows.UI.Xaml.Controls.Image element15 = (global::Windows.UI.Xaml.Controls.Image)target;
                    MainPage_obj15_Bindings bindings = new MainPage_obj15_Bindings();
                    returnValue = bindings;
                    bindings.SetDataRoot((global::slidePuzzle_uwp.Picture) element15.DataContext);
                    element15.DataContextChanged += bindings.DataContextChangedHandler;
                    global::Windows.UI.Xaml.DataTemplate.SetExtensionInstance(element15, bindings);
                }
                break;
            case 29:
                {
                    global::Windows.UI.Xaml.Controls.Grid element29 = (global::Windows.UI.Xaml.Controls.Grid)target;
                    MainPage_obj29_Bindings bindings = new MainPage_obj29_Bindings();
                    returnValue = bindings;
                    bindings.SetDataRoot((global::slidePuzzle_uwp.Player) element29.DataContext);
                    element29.DataContextChanged += bindings.DataContextChangedHandler;
                    global::Windows.UI.Xaml.DataTemplate.SetExtensionInstance(element29, bindings);
                }
                break;
            }
            return returnValue;
        }
    }
}

